(deftheme an-algorithmic-luciditheme)

(let ((class '((class color) (min-colors 89)))
      (plain "#f0f0f0")
      (accent "#d0d0b0")
      (background "#242424")
      (softer "#333333")
      (cursor "#424242")
      (region "#a0c0f0")
      (builtin "#c080e0")
      (keyword "#d090d0")
      (constant "#60e0c0")
      (comment "#857085")
      (function "#a0a0f0")
      (string "#f070a0")
      (typeclass "#70b070")
      (variable "#e0a070")
      (warning "#c52020"))
  (custom-theme-set-faces
   'an-algorithmic-luciditheme
   `(default ((,class (:background ,background :foreground ,plain))))
   `(font-lock-builtin-face ((,class (:foreground ,builtin))))
   `(font-lock-comment-face ((,class (:foreground ,comment))))
   `(font-lock-negation-char-face ((,class (:foreground ,constant))))
   `(font-lock-reference-face ((,class (:foreground ,constant))))
   `(font-lock-constant-face ((,class (:foreground ,constant))))
   `(font-lock-doc-face ((,class (:foreground ,comment))))
   `(font-lock-function-name-face ((,class (:foreground ,function))))
   `(font-lock-keyword-face ((,class (:foreground ,keyword))))
   `(font-lock-string-face ((,class (:foreground ,string))))
   `(font-lock-type-face ((,class (:foreground ,typeclass))))
   `(font-lock-variable-name-face ((,class (:foreground ,variable))))
   `(font-lock-warning-face ((,class (:foreground ,warning :weight bold))))
   `(region ((,class (:background ,region :foreground ,background))))
   `(hl-line ((,class (:background  ,softer))))
   `(fringe ((,class (:background ,softer :foreground ,accent))))
   `(cursor ((,class (:background ,cursor))))
   `(show-paren-match-face ((,class (:background ,builtin))))
   `(isearch ((,class (:bold t :foreground ,constant :background ,cursor))))
   `(mode-line ((,class (:box (:line-width 1 :color nil) :bold t :foreground ,accent :background ,softer))))
   `(mode-line-inactive ((,class (:box (:line-width 1 :color nil :style pressed-button) :background ,background :weight normal))))
   `(mode-line-buffer-id ((,class (:bold t :foreground ,plain :background nil))))
   `(mode-line-highlight ((,class (:foreground ,keyword :box nil :weight bold))))
   `(mode-line-emphasis ((,class (:foreground ,plain))))
   `(minibuffer-prompt ((,class (:bold t :foreground ,keyword))))
   `(default-italic ((,class (:italic t))))
   `(link ((,class (:foreground ,constant :underline t))))
   `(warning ((,class (:foreground ,warning))))
   `(web-mode-builtin-face ((,class (:inherit ,font-lock-builtin-face))))
   `(web-mode-comment-face ((,class (:inherit ,font-lock-comment-face))))
   `(web-mode-constant-face ((,class (:inherit ,font-lock-constant-face))))
   `(web-mode-keyword-face ((,class (:foreground ,keyword))))
   `(web-mode-doctype-face ((,class (:inherit ,font-lock-comment-face))))
   `(web-mode-function-name-face ((,class (:inherit ,font-lock-function-name-face))))
   `(web-mode-string-face ((,class (:foreground ,string))))
   `(web-mode-type-face ((,class (:inherit ,font-lock-type-face))))
   `(web-mode-html-attr-name-face ((,class (:foreground ,function))))
   `(web-mode-html-attr-value-face ((,class (:foreground ,keyword))))
   `(web-mode-warning-face ((,class (:inherit ,font-lock-warning-face))))
   `(web-mode-html-tag-face ((,class (:foreground ,builtin))))))

;;;###autoload
(when load-file-name
  (add-to-list 'custom-theme-load-path
               (file-name-as-directory (file-name-directory load-file-name))))

(provide-theme 'an-algorithmic-luciditheme)
